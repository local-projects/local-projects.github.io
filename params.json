{"name":"Local-projects.GitHub.io","tagline":"Deep thoughts from the Think Tank","body":"## Technical Musings from a Design Team\r\n\r\nInnovative design comes at the price of innovative technology. Scratch that (insert your ctrl-h's here). \r\n\r\nGood design needs great technology to make it work. That's basically what this space is about - getting into the greasy bits on what makes all the pieces fit and run like butter.\r\n\r\nOne of the first things to discuss is project structure.\r\n\r\n### OpenFrameworks Project Structure\r\n```\r\nRoot Folder Structure\r\n* README.md\r\n* Apps\r\n  * OF App 1\r\n  * OF App 2\r\n  * OF App 3\r\n* Sketches\r\n  * OF Sketch 1\r\n  * OF Sketch 2\r\n  * OF Sketch 3\r\n* openFrameworks (git submodule)\r\n* ExternalAddons\r\n  * addon1 (git submodule)\r\n  * addon2 (git submodule)\r\n  * addon3 (git submodule)\r\n* build.command*\r\n* Configs*\r\n* Documentation\r\n* Deployment*\r\n  * Scripts\r\n  * start.command\r\n  * stop.command\r\n* Scripts*\r\n```\r\n\r\n#### openFrameworks and addons\r\n\r\n**openFrameworks**\r\n\r\nopenFrameworks should be added as a submodule, pointing at the Local Projects fork. Feel free to create a project-specific branch that points to a different version of OF (master, stable, 0.8.1, etc.). For example:\r\n\r\n```\r\ngit submodule add https://github.com/local-projects/openFrameworks.git\r\ncd openFrameworks\r\ngit checkout stable\r\ngit checkout -b project/YourProject\r\n```\r\n\r\n**addons**\r\nopenFrameworks addons should be added as submodules in the ExternalAddons addons folder. These addons should be forked into the Local Projects account in the event that the original author removes their repository, and so that we can maintain project-specific code. For example:\r\n\r\n```\r\ncd ExternalAddons\r\ngit submodule add https://github.com/local-projects/ofxAddonName.git\r\n```\r\n\r\nWhen adding an addon to a project, make sure a relative path is used. Tools such as Adam Carlucci's OF Plugin for Xcode should take care of this automatically, setting the paths to something like `../../ExternalAddons/ofxAddonName...` instead of the normal `../../../addons/ofxAddonName....` You want to make sure it's not an absolute path such as `/Users/youraccount/Code/Project/ExternalAddons/ofxAddonName...` because everyone will hate you.\r\n\r\n**Other Folders**\r\n\r\n**build.command**\r\nThis script should build a Release from scratch. The script will create a Release folder, to be copied integrally into the final computer. That folder should include binary + needed configuration files, required assets, and deployment scripts. The deployment scripts are the way to start, stop and report crashes for the installation. The release binary should include versioning information. Look into CWRU project for an example on how to do this on OSX.\r\n\r\n**Configs**\r\n\r\nIncludes configuration files to be used onsite. These will be copied over the Release folder by the build.command when building a release.\r\n\r\n**Deployment**\r\n\r\nincludes all scripts needed to start / stop / report crash etc for the installation. It should at least include two clear scripts called \"start\" and \"stop\", wich might call subscripts.\r\n\r\n**Scripts**\r\n\r\nRandom scripts that might help for development / testing (i.e. pull json files and clean, update submodules, etc)\r\n\r\n**Shared**\r\n\r\nProject-specific code that is shared among Sketches and/or Apps.\r\n\r\n**Set up a new project**\r\nSee [this non-official, non-complete, work in progress script](https://gist.github.com/mattfelsen/b50762ed68a9e43f7388) for helping to automate getting a new project set up with the above structure.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}